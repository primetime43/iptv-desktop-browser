name: Build DesktopApp

permissions:
  contents: write

on:
  push:
    branches: [ master, main ]
    tags: [ 'v*' ]
  pull_request:
    branches: [ master, main ]
  workflow_dispatch:

concurrency:
  group: build-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    runs-on: windows-latest
    env:
      CONFIG: Release
      PROJECT: DesktopApp/DesktopApp.csproj
      FRAMEWORK: net9.0-windows
      APP_NAME: iptv-desktop-browser
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '9.0.x'
          cache: true
          cache-dependency-path: |
            DesktopApp/packages.lock.json

      - name: Restore (generate/update lock file if needed)
        run: dotnet restore $env:PROJECT

      - name: Verify lock file exists
        run: |
          if (-not (Test-Path "DesktopApp/packages.lock.json")) { Write-Error 'packages.lock.json missing'; exit 1 }
          type DesktopApp/packages.lock.json

      - name: Build
        run: dotnet build $env:PROJECT -c $env:CONFIG -f $env:FRAMEWORK --no-restore

      - name: Publish (framework-dependent win-x64 single-file)
        run: >-
          dotnet publish $env:PROJECT -c $env:CONFIG -f $env:FRAMEWORK
          -r win-x64 --self-contained false /p:PublishSingleFile=true
          -o publish/win-x64-fdd

      - name: Remove any pdb files
        run: Get-ChildItem publish -Recurse -Include *.pdb | Remove-Item -Force -ErrorAction SilentlyContinue

      - name: Verify exe
        run: |
          if (-not (Test-Path "publish/win-x64-fdd/$env:APP_NAME.exe")) { Write-Error 'EXE not found'; exit 1 }
          Get-Item "publish/win-x64-fdd/$env:APP_NAME.exe" | Format-List *

      - name: Upload exe artifact (no zip)
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.APP_NAME }}-framework-dependent-win-x64
          path: publish/win-x64-fdd/${{ env.APP_NAME }}.exe
          if-no-files-found: error
          compression-level: 0

  release:
    if: startsWith(github.ref, 'refs/tags/v')
    needs: build
    runs-on: windows-latest
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          path: dist
      - name: Create Release
        uses: softprops/action-gh-release@v2
        with:
          files: |
            dist/**/iptv-desktop-browser.exe
          draft: false
          prerelease: ${{ contains(github.ref_name, '-rc') || contains(github.ref_name, '-beta') || contains(github.ref_name, '-alpha') }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
